name: Deploy FastAPI to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted]  # Use your self-hosted runner on EC2

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy with Docker Compose
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPO: ${{ github.repository }}
      run: |
        mkdir -p ~/RishRam-Vocabulary
        cd ~/RishRam-Vocabulary
    
        if [ ! -d .git ]; then
          git clone https://x-access-token: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@github.com/${REPO}.git .
        else
          git reset --hard
          git clean -fd
          git pull https://x-access-token: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@github.com/${REPO}.git main
        fi

        # Create .env securely
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" > .env
        echo "SERP_API_KEY=${{ secrets.SERP_API_KEY }}" >> .env
    
        docker compose down || true
        docker image prune -f
        docker compose build
        docker compose up -d --remove-orphans
    

